{
  "modelName": "bumpgen__8df9f7de936707815eb12e226517a1b0023383eb",
  "id": "MetaMask__eth-ledger-bridge-keyring-@ethereumjs-slash-tx__^5.3.0",
  "patch": "diff --git a/package.json b/package.json\nindex bafd4ab..997f4b5 100644\n--- a/package.json\n+++ b/package.json\n@@ -38,7 +38,7 @@\n   },\n   \"dependencies\": {\n     \"@ethereumjs/rlp\": \"^4.0.0\",\n-    \"@ethereumjs/tx\": \"^4.1.1\",\n+    \"@ethereumjs/tx\": \"^5.3.0\",\n     \"@ethereumjs/util\": \"^8.0.0\",\n     \"@metamask/eth-sig-util\": \"^7.0.0\",\n     \"hdkey\": \"^2.1.0\"\ndiff --git a/src/ledger-keyring.test.ts b/src/ledger-keyring.test.ts\nindex 82c1801..d75b8d6 100644\n--- a/src/ledger-keyring.test.ts\n+++ b/src/ledger-keyring.test.ts\n@@ -1,6 +1,7 @@\n-import { Common, Chain, Hardfork } from '@ethereumjs/common';\n+import { Common, Chain, Hardfork } from '@ethereumjs/tx/node_modules/@ethereumjs/common';\n import { RLP } from '@ethereumjs/rlp';\n import { TransactionFactory } from '@ethereumjs/tx';\n+import { Common, Chain, Hardfork } from '@ethereumjs/common';\n import * as ethUtil from '@ethereumjs/util';\n import * as sigUtil from '@metamask/eth-sig-util';\n import EthereumTx from 'ethereumjs-tx';\n@@ -68,7 +69,7 @@ const newFakeTx = TransactionFactory.fromTxData(\n     value: '0x00',\n     data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n   },\n-  { common, freeze: false },\n+  { common: new Common({ chain: Chain.Mainnet, hardfork: Hardfork.London })._common }\n );\n \n const fakeTypeTwoTx = TransactionFactory.fromTxData(\n@@ -83,7 +84,7 @@ const fakeTypeTwoTx = TransactionFactory.fromTxData(\n     type: 2,\n     v: '0x01',\n   },\n-  { common: commonEIP1559, freeze: false },\n+  { common: new Common({ chain: 'mainnet', hardfork: 'petersburg' }), freeze: false }\n );\n \n describe('LedgerKeyring', function () {\n@@ -543,7 +544,7 @@ describe('LedgerKeyring', function () {\n             expect(params).toStrictEqual({\n               hdPath: \"m/44'/60'/0'/0\",\n               tx: Buffer.from(\n-                RLP.encode(newFakeTx.getMessageToSign(false)),\n+                RLP.encode(newFakeTx.getMessageToSign()),\n               ).toString('hex'),\n             });\n             return expectedRSV;\n@@ -575,7 +576,7 @@ describe('LedgerKeyring', function () {\n             type: fakeTypeTwoTx.type,\n             ...expectedRSV,\n           },\n-          { common: commonEIP1559, freeze: false },\n+          { freeze: false },\n         );\n         jest\n           .spyOn(TransactionFactory, 'fromTxData')\n@@ -590,7 +591,7 @@ describe('LedgerKeyring', function () {\n           .mockImplementation(async (params) => {\n             expect(params).toStrictEqual({\n               hdPath: \"m/44'/60'/0'/0\",\n-              tx: fakeTypeTwoTx.getMessageToSign(false).toString('hex'),\n+                            tx: fakeTypeTwoTx.getMessageToSign(false).toString('hex'),\n             });\n             return expectedRSV;\n           });\ndiff --git a/src/ledger-keyring.ts b/src/ledger-keyring.ts\nindex c875a85..91f47e6 100644\n--- a/src/ledger-keyring.ts\n+++ b/src/ledger-keyring.ts\n@@ -326,7 +326,7 @@ export class LedgerKeyring extends EventEmitter {\n     // Note also that `getMessageToSign` will return valid RLP for all transaction types, whereas the\n     // `serialize` method will not for any transaction type except legacy. This is because `serialize` includes\n     // empty r, s and v values in the encoded rlp. This is why we use `getMessageToSign` here instead of `serialize`.\n-    const messageToSign = tx.getMessageToSign(false);\n+    const messageToSign = tx.getMessageToSign();\n \n     rawTxHex = Buffer.isBuffer(messageToSign)\n       ? messageToSign.toString('hex')\n@@ -336,9 +336,9 @@ export class LedgerKeyring extends EventEmitter {\n       // Because tx will be immutable, first get a plain javascript object that\n       // represents the transaction. Using txData here as it aligns with the\n       // nomenclature of ethereumjs/tx.\n-      const txData: TxData = tx.toJSON();\n+      const txData = tx.toJSON();\n       // The fromTxData utility expects a type to support transactions with a type other than 0\n-      txData.type = tx.type;\n+      txData.type = tx.type.toString();\n       // The fromTxData utility expects v,r and s to be hex prefixed\n       txData.v = ethUtil.addHexPrefix(payload.v);\n       txData.r = ethUtil.addHexPrefix(payload.r);\ndiff --git a/yarn.lock b/yarn.lock\nindex 776ade9..ac7691f 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -503,6 +503,15 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@ethereumjs/common@npm:^4.3.0\":\n+  version: 4.3.0\n+  resolution: \"@ethereumjs/common@npm:4.3.0\"\n+  dependencies:\n+    \"@ethereumjs/util\": ^9.0.3\n+  checksum: f423ae3f3c2b9db3fbc99ab36d6ec961529abdc9defbc400f85d8553ef18f98af96dbf218b67a37f6f6e637a8e19aa9857214b63f5a932240668f84364e7d4ff\n+  languageName: node\n+  linkType: hard\n+\n \"@ethereumjs/rlp@npm:^4.0.0, @ethereumjs/rlp@npm:^4.0.1\":\n   version: 4.0.1\n   resolution: \"@ethereumjs/rlp@npm:4.0.1\"\n@@ -512,7 +521,16 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n-\"@ethereumjs/tx@npm:^4.1.1, @ethereumjs/tx@npm:^4.2.0\":\n+\"@ethereumjs/rlp@npm:^5.0.2\":\n+  version: 5.0.2\n+  resolution: \"@ethereumjs/rlp@npm:5.0.2\"\n+  bin:\n+    rlp: bin/rlp.cjs\n+  checksum: b569061ddb1f4cf56a82f7a677c735ba37f9e94e2bbaf567404beb9e2da7aa1f595e72fc12a17c61f7aec67fd5448443efe542967c685a2fe0ffc435793dcbab\n+  languageName: node\n+  linkType: hard\n+\n+\"@ethereumjs/tx@npm:^4.2.0\":\n   version: 4.2.0\n   resolution: \"@ethereumjs/tx@npm:4.2.0\"\n   dependencies:\n@@ -524,6 +542,18 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@ethereumjs/tx@npm:^5.3.0\":\n+  version: 5.3.0\n+  resolution: \"@ethereumjs/tx@npm:5.3.0\"\n+  dependencies:\n+    \"@ethereumjs/common\": ^4.3.0\n+    \"@ethereumjs/rlp\": ^5.0.2\n+    \"@ethereumjs/util\": ^9.0.3\n+    ethereum-cryptography: ^2.1.3\n+  checksum: 1fa6ef7a5eea7605ca065ab4df5446bdbf17a368267b60cdbb315cfcd78ac82dc689ba020093ae3d42940ad196bfffbfa705fd51f30a277c6eb60b04432db743\n+  languageName: node\n+  linkType: hard\n+\n \"@ethereumjs/util@npm:^8.0.0, @ethereumjs/util@npm:^8.1.0\":\n   version: 8.1.0\n   resolution: \"@ethereumjs/util@npm:8.1.0\"\n@@ -535,6 +565,16 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@ethereumjs/util@npm:^9.0.3\":\n+  version: 9.0.3\n+  resolution: \"@ethereumjs/util@npm:9.0.3\"\n+  dependencies:\n+    \"@ethereumjs/rlp\": ^5.0.2\n+    ethereum-cryptography: ^2.1.3\n+  checksum: 231dae61268c84d514a6c992a770559bb94a21c753c02287d08781cbeae01a6e5b5479af9f0d3d412d532fda6e9b1eeb746e617a68b738907a4a8ee4e24d79a6\n+  languageName: node\n+  linkType: hard\n+\n \"@ethersproject/abi@npm:5.7.0, @ethersproject/abi@npm:^5.5.0, @ethersproject/abi@npm:^5.7.0\":\n   version: 5.7.0\n   resolution: \"@ethersproject/abi@npm:5.7.0\"\n@@ -1597,7 +1637,7 @@ __metadata:\n   dependencies:\n     \"@ethereumjs/common\": ^3.1.1\n     \"@ethereumjs/rlp\": ^4.0.0\n-    \"@ethereumjs/tx\": ^4.1.1\n+    \"@ethereumjs/tx\": ^5.3.0\n     \"@ethereumjs/util\": ^8.0.0\n     \"@lavamoat/allow-scripts\": ^2.5.1\n     \"@ledgerhq/hw-app-eth\": ^6.32.0\n@@ -1679,6 +1719,15 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@noble/curves@npm:1.3.0, @noble/curves@npm:~1.3.0\":\n+  version: 1.3.0\n+  resolution: \"@noble/curves@npm:1.3.0\"\n+  dependencies:\n+    \"@noble/hashes\": 1.3.3\n+  checksum: b65342ee66c4a440eee2978524412eabba9a9efdd16d6370e15218c6a7d80bddf35e66bb57ed52c0dfd32cb9a717b439ab3a72db618f1a0066dfebe3fd12a421\n+  languageName: node\n+  linkType: hard\n+\n \"@noble/hashes@npm:1.3.1\":\n   version: 1.3.1\n   resolution: \"@noble/hashes@npm:1.3.1\"\n@@ -1686,6 +1735,13 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@noble/hashes@npm:1.3.3, @noble/hashes@npm:~1.3.2\":\n+  version: 1.3.3\n+  resolution: \"@noble/hashes@npm:1.3.3\"\n+  checksum: 8a6496d1c0c64797339bc694ad06cdfaa0f9e56cd0c3f68ae3666cfb153a791a55deb0af9c653c7ed2db64d537aa3e3054629740d2f2338bb1dcb7ab60cd205b\n+  languageName: node\n+  linkType: hard\n+\n \"@noble/hashes@npm:^1.3.1, @noble/hashes@npm:~1.3.0, @noble/hashes@npm:~1.3.1\":\n   version: 1.3.2\n   resolution: \"@noble/hashes@npm:1.3.2\"\n@@ -1786,6 +1842,13 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@scure/base@npm:~1.1.4\":\n+  version: 1.1.6\n+  resolution: \"@scure/base@npm:1.1.6\"\n+  checksum: d6deaae91deba99e87939af9e55d80edba302674983f32bba57f942e22b1726a83c62dc50d8f4370a5d5d35a212dda167fb169f4b0d0c297488d8604608fc3d3\n+  languageName: node\n+  linkType: hard\n+\n \"@scure/bip32@npm:1.3.1\":\n   version: 1.3.1\n   resolution: \"@scure/bip32@npm:1.3.1\"\n@@ -1797,6 +1860,17 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@scure/bip32@npm:1.3.3\":\n+  version: 1.3.3\n+  resolution: \"@scure/bip32@npm:1.3.3\"\n+  dependencies:\n+    \"@noble/curves\": ~1.3.0\n+    \"@noble/hashes\": ~1.3.2\n+    \"@scure/base\": ~1.1.4\n+  checksum: f939ca733972622fcc1e61d4fdf170a0ad294b24ddb7ed7cdd4c467e1ef283b970154cb101cf5f1a7b64cf5337e917ad31135911dfc36b1d76625320167df2fa\n+  languageName: node\n+  linkType: hard\n+\n \"@scure/bip39@npm:1.2.1\":\n   version: 1.2.1\n   resolution: \"@scure/bip39@npm:1.2.1\"\n@@ -1807,6 +1881,16 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@scure/bip39@npm:1.2.2\":\n+  version: 1.2.2\n+  resolution: \"@scure/bip39@npm:1.2.2\"\n+  dependencies:\n+    \"@noble/hashes\": ~1.3.2\n+    \"@scure/base\": ~1.1.4\n+  checksum: cb99505e6d2deef8e55e81df8c563ce8dbfdf1595596dc912bceadcf366c91b05a98130e928ecb090df74efdb20150b64acc4be55bc42768cab4d39a2833d234\n+  languageName: node\n+  linkType: hard\n+\n \"@sinclair/typebox@npm:^0.24.1\":\n   version: 0.24.51\n   resolution: \"@sinclair/typebox@npm:0.24.51\"\n@@ -3987,6 +4071,18 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"ethereum-cryptography@npm:^2.1.3\":\n+  version: 2.1.3\n+  resolution: \"ethereum-cryptography@npm:2.1.3\"\n+  dependencies:\n+    \"@noble/curves\": 1.3.0\n+    \"@noble/hashes\": 1.3.3\n+    \"@scure/bip32\": 1.3.3\n+    \"@scure/bip39\": 1.2.2\n+  checksum: 7f9c14f868a588641179cace3eb86c332c4743290865db699870710253cabc4dc74bd4bce5e7bc6db667482e032e94d6f79521219eb6be5dc422059d279a27b7\n+  languageName: node\n+  linkType: hard\n+\n \"ethereumjs-tx@npm:^1.3.4\":\n   version: 1.3.7\n   resolution: \"ethereumjs-tx@npm:1.3.7\"\n"
}